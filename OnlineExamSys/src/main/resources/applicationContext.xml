<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:c="http://www.springframework.org/schema/c" xmlns:cache="http://www.springframework.org/schema/cache" xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
	http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-3.2.xsd
	http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.2.xsd"
	default-lazy-init="true">

	<!--&lt;!&ndash; 自动装配注解Bean后置处理器 &ndash;&gt;-->
	<!--<bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/>-->

	<!--&lt;!&ndash; JPA注解Bean后置处理器 &ndash;&gt;-->
	<!--<bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />-->

	<!--<context:property-placeholder location="classpath*:/redis.properties" ignore-resource-not-found="true" ignore-unresolvable="true"/>-->
	<context:property-placeholder location="classpath*:/common-config.properties" ignore-resource-not-found="true" ignore-unresolvable="true" />

	<context:component-scan base-package="com.ifox">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.driver}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="initialPoolSize" value="${connection_pools.initial_pool_size}" />
		<property name="minPoolSize" value="${connection_pools.min_pool_size}" />
		<property name="maxPoolSize" value="${connection_pools.max_pool_size}" />
		<property name="maxIdleTime" value="${connection_pools.max_idle_time}" />
		<property name="acquireIncrement" value="${connection_pools.acquire_increment}" />
		<property name="checkoutTimeout" value="${connection_pools.checkout_timeout}" />
	</bean>

	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="com.ifox.exam.entity" />
		<!--<property name="persistenceXmlLocation" value="classpath*:/persistence.xml" />-->
		<!--<property name="persistenceUnitName" value="persistenceUnit" />-->
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="showSql" value="false" />
				<property name="generateDdl" value="false" />
			</bean>
		</property>
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop>
				<prop key="hibernate.cache.use_second_level_cache">${hibernate.cache.use_second_level_cache}</prop>
				<prop key="hibernate.cache.region.factory_class">${hibernate.cache.region.factory_class}</prop>
				<prop key="hibernate.cache.use_query_cache">${hibernate.cache.use_query_cache}</prop>
				<prop key="hibernate.jdbc.fetch_size">${hibernate.jdbc.fetch_size}</prop>
				<prop key="hibernate.jdbc.batch_size">${hibernate.jdbc.batch_size}</prop>
				<prop key="hibernate.connection.isolation">2</prop>
				<prop key="javax.persistence.validation.mode">none</prop>
				<prop key="hibernate.search.default.directory_provider">org.hibernate.search.store.FSDirectoryProvider</prop>
    			<!-- localhost config -->
				<prop key="hibernate.search.default.indexBase">D:\index\localhost\ov_site</prop>
				<!-- linux 120.27.38.49 config -->
				<!-- <prop key="hibernate.search.default.indexBase">/mnt/ov/index</prop>-->
			</props>
		</property>
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" />

	<!--<cache:annotation-driven cache-manager="cacheManager" />-->

	<!--<bean id="ehCacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">-->
		<!--<property name="configLocation" value="classpath:/ehcache.xml" />-->
		<!--<property name="shared" value="true" />-->
	<!--</bean>-->

	<!--<bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">-->
		<!--<property name="cacheManager" ref="ehCacheManager" />-->
	<!--</bean>-->
	
		<bean id="freeMarkerConfigurer"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="templateLoaderPaths" value="${template.loader_path}" />
		<property name="freemarkerSettings">
			<props>
				<prop key="defaultEncoding">${template.encoding}</prop>
				<prop key="url_escaping_charset">${url_escaping_charset}</prop>
				<prop key="locale">${locale}</prop>
				<prop key="template_update_delay">${template.update_delay}</prop>
				<prop key="tag_syntax">auto_detect</prop>
				<prop key="whitespace_stripping">true</prop>
				<prop key="classic_compatible">true</prop>
				<prop key="number_format">${template.number_format}</prop>
				<prop key="boolean_format">${template.boolean_format}</prop>
				<prop key="datetime_format">${template.datetime_format}</prop>
				<prop key="date_format">${template.date_format}</prop>
				<prop key="time_format">${template.time_format}</prop>
				<prop key="object_wrapper">freemarker.ext.beans.BeansWrapper</prop>
			</props>
		</property>
		<!--<property name="freemarkerVariables">-->
			<!--<map>-->
				<!--<entry key="base" value="#{servletContext.contextPath}" />-->
				<!--<entry key="message" value-ref="messageMethod" />-->
				<!--<entry key="abbreviate" value-ref="abbreviateMethod" />-->
				<!--<entry key="locale" value="${locale}" />-->
				<!--<entry key="flash_message" value-ref="flashMessageDirective" />-->
				<!--<entry key="pagination" value-ref="paginationDirective" />-->
				<!--<entry key="systemName" value="${system.project_name}" />-->
			<!--</map>-->
		<!--</property>-->
	</bean>

	<!--<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">-->
		<!--<property name="cacheSeconds" value="${message.cache_seconds}" />-->
		<!--<property name="useCodeAsDefaultMessage" value="true" />-->
		<!--<property name="basenames">-->
			<!--<list>-->
				<!--<value>${message.common_path}</value>-->
			<!--</list>-->
		<!--</property>-->
	<!--</bean>-->

	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.FixedLocaleResolver">
		<property name="defaultLocale" value="${locale}" />
	</bean>
	

	<!-- redis缓存 -->
	<!-- Jedis ConnectionFactory 
    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">  
	    <property name="hostName"   value="${redis.ip}" />    
	    <property name="port"       value="${redis.port}" />
	    <property name="timeout"    value="${redis.timeout}" />
	</bean>   -->
    <!-- redis template definition 
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
    	<property name="connectionFactory" ref="jedisConnectionFactory" /> 
    </bean>
-->
	<!-- declare Redis Cache Manager -->  
	
    <!-- <bean id="cacheManager" class="org.springframework.data.redis.cache.RedisCacheManager"  
        c:template-ref="redisTemplate" /> -->

	<bean id="threadPoolExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="${task.core_pool_size}" />
		<property name="maxPoolSize" value="${task.max_pool_size}" />
		<property name="queueCapacity" value="${task.queue_capacity}" />
		<property name="keepAliveSeconds" value="${task.keep_alive_seconds}" />
	</bean>
	
	<!--<task:annotation-driven />-->

 <!--<task:scheduler id="testTask" pool-size="3" />-->
	<!--<task:scheduled-tasks scheduler="testTask">-->

	<!--<task:scheduled ref="shipIllegalFishing" method="excute" cron="10 */11 * * * ?" />-->
		<!---->
	<!--<task:scheduled ref="timeTask" method="excute" cron="20 */5 * * * ?" /> -->

	<!--</task:scheduled-tasks>-->
	<!---->
	<!---->
</beans>